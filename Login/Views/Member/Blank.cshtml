@{
    ViewData["Title"] = "個人資料";
}

<style>
    .frame {
        height: 300px; /*can be anything*/
        width: 300px; /*can be anything*/
        position: relative;
        border: dotted 3px #514a4a5e;
    }

    .profliePhoto {
        max-height: 100%;
        max-width: 100%;
        width: auto;
        height: auto;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        margin: auto;
    }

    textarea {
        white-space: nowrap; /* 禁止換行 */
        overflow: hidden; /* 不顯示捲軸 */
        resize: none; /* 禁止瀏覽器拖放區塊大小 */
    }

    .inputHeight {
        height: 58px;
    }



</style>

<!-- Begin Page Content -->
<div class="container-fluid" id="myContent">

    <!-- Page Heading -->
    <h1 class="h3 mb-4 text-gray-800">個人資料</h1>

    <div class="row align-items-start">
        <div class="col">
            <div class="frame">
                <img v-bind:src="'data:image/jpeg;base64,'+ form.base64String" class="rounded mx-auto d-block img-responsive profliePhoto"
                     alt="個人頭像">
            </div>
            <div class="input-group col-lg-6 p-2">
                <input type="file" class="form-control" id="inputGroupFile04" v-on:change="fileSelected">
                <button class="btn btn-outline-secondary" type="button" id="inputGroupFileAddon04">Button</button>
            </div>
            <h2 class="display-3 mb-1">{{form.role}}</h2>

            <div class="input-group">
                <a class="btn btn-success btn-icon-split" role="button" v-on:click="editData()">
                    <span class="icon text-white-50">
                        <i class="fas fa-check"></i>
                    </span>
                    <span class="text">修改資料</span>
                </a>
                <a class="btn btn-danger btn-icon-split" role="button">
                    <span class="icon text-white-50">
                        <i class="fas fa-trash"></i>
                    </span>
                    <span class="text">刪除此帳號</span>
                </a>
            </div>

        </div>
        <div class="col">
            <div class="form-floating mb-3">
                <input type="email" class="form-control" id="emailInput" placeholder="name@example.com" v-model="form.email" v-debounce:300="emailCheck">
                <label for="emailInput">信箱</label>
            </div>
            <div class="form-floating mb-3">
                <textarea class="form-control textarea" placeholder="帳號" id="accountInput" disabled>{{form.account}}</textarea>
                <label for="accountInput">帳號</label>
            </div>
            <div class="form-floating mb-3">
                <input type="text" class="form-control" id="nameInput" v-model="form.name" v-debounce:300="nameCheck" placeholder="使用者名稱">
                <label for="nameInput">使用者名稱</label>
            </div>           
            <div class="form-floating mb-3">
                <select class="form-select" id="sexSelect" v-model="form.sexId" v-debounce:300="sexCheck">
                    <option v-for="(item, index) in sexOptions" :value="item.id">
                        {{ item.name }}
                    </option>
                </select>
                <label for="sexSelect">性別</label>
            </div>
            <div class="form-floating mb-3">
                <input class="form-control" placeholder="手機" id="cellPhoneInput" v-model="form.cellPhone" v-debounce:300="cellPhoneCheck">
                <label for="cellPhoneInput">手機</label>
            </div>
            <div class="form-floating mb-3">
                <input id="birthDay" class="form-control" type="date" placeholder="生日" v-model="form.birthDay" v-debounce:300="birthDayCheck" />
                <span id="birthDaySelected"></span>
                <label for="birthDay">生日</label>
            </div>
            <div class="form">
                <label class="text-lg col-form-label pe-3">帳號狀態</label>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="Status1" id="Status1" value="1" v-model="form.status">
                    <label class="form-check-label" for="Status1">啟用</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="Status0" id="Status0" value="0" v-model="form.status">
                    <label class="form-check-label" for="Status0">停用</label>
                </div>
            </div>
        </div>
    </div>
</div>




<script>    
    // 在你的 Vue 3 项目中定义一个全局指令
    const debounce = (fn, delay) => {
        let timer;
        return (...args) => {
            clearTimeout(timer);
            timer = setTimeout(() => fn(...args), delay);
        };
    };

    const blank01 = Vue.createApp({
        data() {
            return {
                sexOptions: [
                    {
                        id: 99,
                        name: '請選擇'
                    },
                    {
                        id: 1,
                        name: '男'
                    }, {
                        id: 2,
                        name: '女'
                    }, {
                        id: 0,
                        name: '不透漏'
                    }],

                imageType: 'data:image/jpeg;base64,',

                form: {
                    MemberID: 0
                    , Account: ""
                    , Name: ""
                    , Email: ""
                    , SexId: 99
                    , Sex: ""
                    , BirthDay: ""
                    , CellPhone: ""
                    , Photo: ""
                    , base64String: ""
                    , RoleId: 0
                    , Role: ""
                    , Status: 0
                },
                files: new FormData(),
            }
        },
        directives: {
            debounce: ("debounce", {
                // 綁定DOM的父組件被掛載時調用
                mounted(el, binding) {                    
                    el.addEventListener('input', debounce(() => {
                        binding.value();
                    }, parseInt(binding.arg) || 300));
                }
            })
        },
        mounted() {
            console.log('mounted 個人資料');
            
            this.getData();
        },
        methods: {
            /** 取得帳號資料 */
            getData(e) {
                axios
                    .post('/Member/GetMemberData',
                       null,
                        {
                            headers: {
                                'Content-Type': 'application/json; charset=utf-8',
                            }
                        }
                    )
                    .then(response => {
                        $.blockUI({ message: '<h1>處理中請稍候…</h1>' });

                        setTimeout(() => {
                            $.unblockUI();

                            if (response.data.vaild === true) {
                                blank01.form = response.data.result;
                            } else {
                                alert(response.data.msg);
                            }
                        }, 1000);
                    })
                    .catch(function (error) { // 请求失败处理
                        $.unblockUI();
                        alert(error);
                        console.log(error);
                    })
            },
            /** 修改資料 */
            editData(e){
                if (this.validateForm()) {
                    let action = 4;
                    action = blank01.form.MemberID === 0 ? 1 : 2;

                    axios
                        .post('/Member/crudMemberData',
                            {
                                model: blank01.form,
                                imgPhoto: blank01.form.photo,
                                action: action,
                                fileInfo: blank01.files,
                            },
                            {
                                headers: {
                                    //multipart/form-data // => 搭配檔案上傳
                                    //application/x-www-form-urlencoded; charset=utf-8 // => 無檔案用這個就好
                                    'Content-Type': 'multipart/form-data',
                                }
                            }
                        )
                        .then(response => {
                            $.blockUI({ message: '<h1>處理中請稍候…</h1>' });

                            setTimeout(() => {
                                $.unblockUI();

                                if (response.data.vaild === true) {
                                    alert(response.data.msg);                                    
                                } else {
                                    alert(response.data.msg);
                                }
                            }, 1000);
                        })
                        .catch(function (error) { // 请求失败处理
                            $.unblockUI();
                            alert(error);
                            console.log(error);
                        })

                } else{
                    alert('表單驗證 不 通過!!!!!!!');
                }
            },
             
            //#region  // 在你的组件中使用 debounce 指令
            /** Email檢查 */
            emailCheck() {
                $('input[type="email"]').css('border-color', 'red');

                if (blank01.form.email === '') {
                    alert('Email 不可為空白');
                    return false;
                } else {
                    var validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
                    if (!blank01.form.email.match(validRegex)) {
                        alert('Email 格式錯誤');
                        return false;
                    }
                }

                if (true) {
                    $('input[type="email"]').removeAttr('style');
                    return true;
                }
            },
            /** 使用者名稱檢查 */
            nameCheck() {
                $('#nameInput').css('border-color', 'red');

                if (blank01.form.name === '') {
                    alert('使用者名稱 不可為空白');
                    return false;
                }

                if (true) {
                    $('#nameInput').removeAttr('style');
                    return true;
                }
            },
            /** 性別下拉式選單檢查 */
            sexCheck() {
                $('#sexSelect').css('border-color', 'red');

                if (blank01.form.sexId == 99) {
                    alert('請選擇性別');
                    return false;
                }

                if (true) {
                    $('#sexSelect').removeAttr('style');
                    return true;
                }
            },
            /** 手機檢查 */
            cellPhoneCheck() {
                $('#cellPhoneInput').css('border-color', 'red');

                if (blank01.form.cellPhone !== '' && blank01.form.cellPhone !== null) {
                    var validRegex = /^09[0-9]{8}$/;
                    if (!blank01.form.cellPhone.match(validRegex)) {
                        alert('手機 格式錯誤');
                        return false;
                    }
                }

                if (true) {
                    $('#cellPhoneInput').removeAttr('style');
                    return true;
                }
            },
            /** 生日檢查 */
            birthDayCheck() {
                $('#birthDay').css('border-color', 'red');

                if (!this.validateDate(blank01.form.birthDay)) {
                    alert('生日日期 格式錯誤');
                    return false;
                }

                if (true) {
                    $('#birthDay').removeAttr('style');
                    return true;
                }
            },
            //#endregion
           
            
            /** 日期格式檢查 */
            validateDate(dtValue) {
                var dtRegex = new RegExp(/^[0-9]{4}[/\-](0[1-9]|1[012])[/\-](0[1-9]|[12][0-9]|3[01])$/);
                return dtRegex.test(dtValue);
            },
            /** 驗證表單 */
            validateForm() {
                if (!this.emailCheck()) {
                    return false;
                }
                
                if (!this.nameCheck()) {
                    return false;
                }

                if (!this.sexCheck()) {
                    return false;
                }

                if (!this.cellPhoneCheck()) {
                    return false;
                }

                if (!this.birthDayCheck()) {
                    return false;
                }

                if (true) { 
                    return true;
                }
            },
            fileSelected(e) {
                const file = e.target.files.item(0);
                const reader = new FileReader();
                reader.addEventListener('load', this.imageLoaded);
                reader.readAsDataURL(file);
                blank01.form.photo = file.name;
                blank01.files = file;
            },
            imageLoaded(e) {
                blank01.form.base64String = e.target.result.split(',')[1];
            },
        },
    }).mount('#myContent')
    //blank01.directive('debounce', debounceDirective);

    $(document).ready(function () {
        $('#main').removeAttr('height');
    });

</script>
